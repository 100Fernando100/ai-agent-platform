import { config } from '../config';

// Mock services
import { MockTwilioService } from './demo/mockTwilio';
import { MockCalendlyService } from './demo/mockCalendly';
import { MockOpenAIService } from './demo/mockOpenAI';
import { MockAirtableService } from './demo/mockAirtable';
import { MockSendGridService } from './demo/mockSendGrid';
import { MockHeyGenService } from './demo/mockHeyGen';
import { MockVAPIService } from './demo/mockVAPI';
import { MockWhatsAppService } from './demo/mockWhatsApp';
import { MockWebFormService } from './demo/mockWebForm';
import { MockPaymentService } from './demo/mockPayment';
import { MockTranslationService } from './demo/mockTranslation';

class ServiceFactory {
  constructor() {
    this.services = {};
  }

  getTwilioService() {
    if (!this.services.twilio) {
      this.services.twilio = new MockTwilioService();
    }
    return this.services.twilio;
  }

  getCalendlyService() {
    if (!this.services.calendly) {
      this.services.calendly = new MockCalendlyService();
    }
    return this.services.calendly;
  }

  getOpenAIService() {
    if (!this.services.openai) {
      this.services.openai = new MockOpenAIService();
    }
    return this.services.openai;
  }

  getAirtableService() {
    if (!this.services.airtable) {
      this.services.airtable = new MockAirtableService();
    }
    return this.services.airtable;
  }

  getSendGridService() {
    if (!this.services.sendgrid) {
      this.services.sendgrid = new MockSendGridService();
    }
    return this.services.sendgrid;
  }

  getHeyGenService() {
    if (!this.services.heygen) {
      this.services.heygen = new MockHeyGenService();
    }
    return this.services.heygen;
  }

  getVAPIService() {
    if (!this.services.vapi) {
      this.services.vapi = new MockVAPIService();
    }
    return this.services.vapi;
  }

  getWhatsAppService() {
    if (!this.services.whatsapp) {
      this.services.whatsapp = new MockWhatsAppService();
    }
    return this.services.whatsapp;
  }

  getWebFormService() {
    if (!this.services.webform) {
      this.services.webform = new MockWebFormService();
    }
    return this.services.webform;
  }

  getPaymentService() {
    if (!this.services.payment) {
      this.services.payment = new MockPaymentService();
    }
    return this.services.payment;
  }

  getTranslationService() {
    if (!this.services.translation) {
      this.services.translation = new MockTranslationService();
    }
    return this.services.translation;
  }
}

export const serviceFactory = new ServiceFactory();
